2025-07-01 11:07:29.864010+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Błąd składniowy w wyrażeniu SQL "select u1_0.id,u1_0.password,u1_0.role,u1_0.username from [*]user u1_0 where u1_0.username=?"; oczekiwano "identifier"
Syntax error in SQL statement "select u1_0.id,u1_0.password,u1_0.role,u1_0.username from [*]user u1_0 where u1_0.username=?"; expected "identifier"; SQL statement:
select u1_0.id,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=? [42001-232]
2025-07-01 11:17:34.410215+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Błąd składniowy w wyrażeniu SQL "insert into [*]user (password,role,username,id) values (?,?,?,default)"; oczekiwano "identifier"
Syntax error in SQL statement "insert into [*]user (password,role,username,id) values (?,?,?,default)"; expected "identifier"; SQL statement:
insert into user (password,role,username,id) values (?,?,?,default) [42001-232]
2025-07-01 11:17:39.076994+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Błąd składniowy w wyrażeniu SQL "select u1_0.id,u1_0.password,u1_0.role,u1_0.username from [*]user u1_0 where u1_0.username=?"; oczekiwano "identifier"
Syntax error in SQL statement "select u1_0.id,u1_0.password,u1_0.role,u1_0.username from [*]user u1_0 where u1_0.username=?"; expected "identifier"; SQL statement:
select u1_0.id,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=? [42001-232]
2025-07-01 11:17:50.517186+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Błąd składniowy w wyrażeniu SQL "select u1_0.id,u1_0.password,u1_0.role,u1_0.username from [*]user u1_0 where u1_0.username=?"; oczekiwano "identifier"
Syntax error in SQL statement "select u1_0.id,u1_0.password,u1_0.role,u1_0.username from [*]user u1_0 where u1_0.username=?"; expected "identifier"; SQL statement:
select u1_0.id,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=? [42001-232]
2025-07-01 11:17:59.194711+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Błąd składniowy w wyrażeniu SQL "insert into [*]user (password,role,username,id) values (?,?,?,default)"; oczekiwano "identifier"
Syntax error in SQL statement "insert into [*]user (password,role,username,id) values (?,?,?,default)"; expected "identifier"; SQL statement:
insert into user (password,role,username,id) values (?,?,?,default) [42001-232]
2025-07-01 11:18:03.613878+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Błąd składniowy w wyrażeniu SQL "select u1_0.id,u1_0.password,u1_0.role,u1_0.username from [*]user u1_0 where u1_0.username=?"; oczekiwano "identifier"
Syntax error in SQL statement "select u1_0.id,u1_0.password,u1_0.role,u1_0.username from [*]user u1_0 where u1_0.username=?"; expected "identifier"; SQL statement:
select u1_0.id,u1_0.password,u1_0.role,u1_0.username from user u1_0 where u1_0.username=? [42001-232]
2025-07-01 20:47:52.961714+02:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Błąd składniowy w wyrażeniu SQL "SELECT * FROM [*]USER"; oczekiwano "identifier"
Syntax error in SQL statement "SELECT * FROM [*]USER"; expected "identifier"; SQL statement:
SELECT * FROM USER [42001-232]
2025-07-01 20:51:25.760879+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Błąd składniowy w wyrażeniu SQL "drop table if exists [*]user cascade "; oczekiwano "identifier"
Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-232]
2025-07-01 20:51:25.780984+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Błąd składniowy w wyrażeniu SQL "create table [*]user (id bigint generated by default as identity, password varchar(255) not null, role varchar(255) not null, username varchar(255) not null unique, primary key (id))"; oczekiwano "identifier"
Syntax error in SQL statement "create table [*]user (id bigint generated by default as identity, password varchar(255) not null, role varchar(255) not null, username varchar(255) not null unique, primary key (id))"; expected "identifier"; SQL statement:
create table user (id bigint generated by default as identity, password varchar(255) not null, role varchar(255) not null, username varchar(255) not null unique, primary key (id)) [42001-232]
2025-07-01 20:57:18.404517+02:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Błąd składniowy w wyrażeniu SQL "SELECT * FROM [*]USER"; oczekiwano "identifier"
Syntax error in SQL statement "SELECT * FROM [*]USER"; expected "identifier"; SQL statement:
SELECT * FROM USER [42001-232]
2025-07-01 20:58:19.104330+02:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Błąd składniowy w wyrażeniu SQL "SELECT * FROM [*]USER"; oczekiwano "identifier"
Syntax error in SQL statement "SELECT * FROM [*]USER"; expected "identifier"; SQL statement:
SELECT * FROM USER [42001-232]
2025-07-01 20:58:20.056370+02:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Błąd składniowy w wyrażeniu SQL "SELECT * FROM [*]USER"; oczekiwano "identifier"
Syntax error in SQL statement "SELECT * FROM [*]USER"; expected "identifier"; SQL statement:
SELECT * FROM USER [42001-232]
2025-07-01 20:58:30.897452+02:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Błąd składniowy w wyrażeniu SQL "SELECT * FROM [*]USER"; oczekiwano "identifier"
Syntax error in SQL statement "SELECT * FROM [*]USER"; expected "identifier"; SQL statement:
SELECT * FROM USER [42001-232]
2025-07-02 22:56:28.656643+02:00 database: flush
org.h2.message.DbException: Błąd ogólny: "org.h2.mvstore.MVStoreException: The file is locked: E:/Studia/semestr 4/Programowanie aplikacji www w technologii JAVA/Aplikacja_zaliczenie/data/baza.mv.db [2.3.232/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: E:/Studia/semestr 4/Programowanie aplikacji www w technologii JAVA/Aplikacja_zaliczenie/data/baza.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:139)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:368)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:52)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.example.Aplikacja_zaliczenie.AplikacjaZaliczenieApplication.main(AplikacjaZaliczenieApplication.java:11)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Błąd ogólny: "org.h2.mvstore.MVStoreException: The file is locked: E:/Studia/semestr 4/Programowanie aplikacji www w technologii JAVA/Aplikacja_zaliczenie/data/baza.mv.db [2.3.232/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: E:/Studia/semestr 4/Programowanie aplikacji www w technologii JAVA/Aplikacja_zaliczenie/data/baza.mv.db [2.3.232/7]" [50000-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 54 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: E:/Studia/semestr 4/Programowanie aplikacji www w technologii JAVA/Aplikacja_zaliczenie/data/baza.mv.db [2.3.232/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 48 more
